{
  "id": 128,
  "name": "aharper",
  "username": "aharper",
  "avatar_template": "/letter_avatar_proxy/v2/letter/a/34f0e0/{size}.png",
  "created_at": "2015-06-12T11:54:48.000Z",
  "cooked": "<p>Perhaps the key is to certify two things: the design and the object.</p>\n<p>To be a certified open source design, one must follow the best practices and fully document the project.  This sounds fairly trivial, but it is much more difficult than it sounds.  while open source software permits a lot of inline documentation (commenting the code for example), any documentation effort of open hardware breaks the workflow of actually making the thing.  This effort should be honored with the basic certification, and could be accomplished with a self cert and basic review / critique by OSHWA.  This review will help the certification mean something, and the critique will help to improve both the documentation and the skills of the maker(s) involved in the project.</p>\n<p>An open source object (hardware) certification will be much harder to achieve by definition.  It would require the design to be certified as an open design, the software to be open source, and the components / subsystems to be either open as well, or ubiquitous to the point of vendor neutrality.  This becomes problematic when it comes to processors, and highlights the need / opportunity for an open hardware CPU.</p>",
  "post_number": 7,
  "post_type": 1,
  "updated_at": "2017-02-14T04:29:16.889Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "avg_time": 34,
  "incoming_link_count": 0,
  "reads": 2,
  "score": 2.1,
  "yours": false,
  "topic_id": 39,
  "topic_slug": "3-certification-of-projects-with-non-open-components",
  "display_username": "aharper",
  "primary_group_name": null,
  "primary_group_flair_url": null,
  "primary_group_flair_bg_color": null,
  "primary_group_flair_color": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_wiki": false,
  "user_title": null,
  "raw": "Perhaps the key is to certify two things: the design and the object.\n\nTo be a certified open source design, one must follow the best practices and fully document the project.  This sounds fairly trivial, but it is much more difficult than it sounds.  while open source software permits a lot of inline documentation (commenting the code for example), any documentation effort of open hardware breaks the workflow of actually making the thing.  This effort should be honored with the basic certification, and could be accomplished with a self cert and basic review / critique by OSHWA.  This review will help the certification mean something, and the critique will help to improve both the documentation and the skills of the maker(s) involved in the project.\n\nAn open source object (hardware) certification will be much harder to achieve by definition.  It would require the design to be certified as an open design, the software to be open source, and the components / subsystems to be either open as well, or ubiquitous to the point of vendor neutrality.  This becomes problematic when it comes to processors, and highlights the need / opportunity for an open hardware CPU.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 704,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false
}