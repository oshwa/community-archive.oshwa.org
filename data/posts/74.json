{
  "id": 74,
  "name": "lbj20",
  "username": "lbj20",
  "avatar_template": "/user_avatar/community.oshwa.org/lbj20/{size}/13_1.png",
  "created_at": "2015-06-07T11:37:46.000Z",
  "cooked": "<p>I think once one uses terms such as \u201ccertification\u201d, one is implying compliance with some specific requirements.  There has to be a clear way to tell whether or not a project is correctly certified, particularly given the idea of self-certification, which forces third parties to be able to spot problematic self-certifications and raise concerns. One has to be able to tell, without subjective opinion, whether a project meets the criteria for certification or not. Therefore everything making up the certification must be \u2018required\u2019 and visibly delivered (or not).</p>\n<p>Best practices are of course splendid and there\u2019s nothing wrong with saying that a project followed them. If they are firmly defined and the project can clearly be seen to have followed them, then they are not really different from mandatory requirements when setting a certification standard.  If they are loosely defined (eg \u201cdo your best to X\u201d), or it is hard to tell whether or not a project followed them from the outside, then they may be written down as best practice to aspire to, but should not be used as elements of a certification scheme.</p>\n<p>This does not preclude a certification standard that requires a mixture of \u2018hard\u2019 requirements (eg \u201cX type files must be licensed under licence Foo\u201d) and \u2018soft\u2019 requirements (eg \u201cthe project community must have the opportunity to review X before it is certified\u201d). It just means the \u2018soft\u2019 requirements must be such that an external public evaluator can tell whether or not they were done.</p>",
  "post_number": 2,
  "post_type": 1,
  "updated_at": "2017-02-14T04:29:11.469Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "avg_time": null,
  "incoming_link_count": 0,
  "reads": 1,
  "score": 0.2,
  "yours": false,
  "topic_id": 45,
  "topic_slug": "9-distinction-between-mandatory-requirements-and-best-practices",
  "display_username": "lbj20",
  "primary_group_name": null,
  "primary_group_flair_url": null,
  "primary_group_flair_bg_color": null,
  "primary_group_flair_color": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_wiki": false,
  "user_title": null,
  "raw": "I think once one uses terms such as \"certification\", one is implying compliance with some specific requirements.  There has to be a clear way to tell whether or not a project is correctly certified, particularly given the idea of self-certification, which forces third parties to be able to spot problematic self-certifications and raise concerns. One has to be able to tell, without subjective opinion, whether a project meets the criteria for certification or not. Therefore everything making up the certification must be 'required' and visibly delivered (or not). \n\nBest practices are of course splendid and there's nothing wrong with saying that a project followed them. If they are firmly defined and the project can clearly be seen to have followed them, then they are not really different from mandatory requirements when setting a certification standard.  If they are loosely defined (eg \"do your best to X\"), or it is hard to tell whether or not a project followed them from the outside, then they may be written down as best practice to aspire to, but should not be used as elements of a certification scheme. \n\nThis does not preclude a certification standard that requires a mixture of 'hard' requirements (eg \"X type files must be licensed under licence Foo\") and 'soft' requirements (eg \"the project community must have the opportunity to review X before it is certified\"). It just means the 'soft' requirements must be such that an external public evaluator can tell whether or not they were done.",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 703,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false
}