{
  "id": 94,
  "name": "johnbeetem",
  "username": "johnbeetem",
  "avatar_template": "/letter_avatar_proxy/v2/letter/j/46a35a/{size}.png",
  "created_at": "2015-06-08T16:17:48.000Z",
  "cooked": "<p>I would like to see two levels: \u201cfully open\u201d and \u201cmostly open\u201d.  \u201cMostly open\u201d means that the hardware design source files are open, e.g., there are editable schematics, PCB design, BOM, and source code for programmable devices.  These all need OSHW licenses.  All components must be purchasable from distributors and no component can require an NDA to to get data sheets, \u201cnearly complete\u201d technical reference manuals, and similar documentation.  With a \u201cmostly open\u201d design, you must have everything you need to modify the hardware design.</p>\n<p>However, we all know that there are useful OSHW components that are missing important parts of the technical documentation.  The most obvious offenders are GPUs that require a non-open \u201cbinary blob\u201d and FPGAs that do not document the bistream format, requiring FPGA designers to use the vendor\u2019s tools.  If such components are used, the OSHW is at best \u201cmostly open\u201d.  To get the gold \u201cfully open\u201d certification, all components must be fully documented for the purposes of writing software and include the details of (for example) GPU registers and FPGA bitstreams.</p>\n<p>With a \u201cfully open\u201d design, you have everything you need to program your OSHW with free-as-in-freedom software, giving you full control over your hardware.</p>\n<p>I believe calling attention to \u201cmostly openness\u201d would be helpful for making OSHW \u201cfully open\u201d in the long run.</p>\n<p>JMO/YMMV</p>",
  "post_number": 5,
  "post_type": 1,
  "updated_at": "2017-02-14T04:29:13.715Z",
  "reply_count": 0,
  "reply_to_post_number": null,
  "quote_count": 0,
  "avg_time": 7,
  "incoming_link_count": 0,
  "reads": 3,
  "score": 0.95,
  "yours": false,
  "topic_id": 38,
  "topic_slug": "2-single-definition-of-openness-or-a-spectrum-of-options",
  "display_username": "johnbeetem",
  "primary_group_name": null,
  "primary_group_flair_url": null,
  "primary_group_flair_bg_color": null,
  "primary_group_flair_color": null,
  "version": 1,
  "can_edit": false,
  "can_delete": false,
  "can_recover": false,
  "can_wiki": false,
  "user_title": null,
  "raw": "I would like to see two levels: \"fully open\" and \"mostly open\".  \"Mostly open\" means that the hardware design source files are open, e.g., there are editable schematics, PCB design, BOM, and source code for programmable devices.  These all need OSHW licenses.  All components must be purchasable from distributors and no component can require an NDA to to get data sheets, \"nearly complete\" technical reference manuals, and similar documentation.  With a \"mostly open\" design, you must have everything you need to modify the hardware design.\n\nHowever, we all know that there are useful OSHW components that are missing important parts of the technical documentation.  The most obvious offenders are GPUs that require a non-open \"binary blob\" and FPGAs that do not document the bistream format, requiring FPGA designers to use the vendor's tools.  If such components are used, the OSHW is at best \"mostly open\".  To get the gold \"fully open\" certification, all components must be fully documented for the purposes of writing software and include the details of (for example) GPU registers and FPGA bitstreams.\n\nWith a \"fully open\" design, you have everything you need to program your OSHW with free-as-in-freedom software, giving you full control over your hardware.\n\nI believe calling attention to \"mostly openness\" would be helpful for making OSHW \"fully open\" in the long run.\n\nJMO/YMMV",
  "actions_summary": [],
  "moderator": false,
  "admin": false,
  "staff": false,
  "user_id": 706,
  "hidden": false,
  "trust_level": 1,
  "deleted_at": null,
  "user_deleted": false,
  "edit_reason": null,
  "can_view_edit_history": true,
  "wiki": false
}